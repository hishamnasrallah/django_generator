# {{ project.name }} API Documentation

Generated by Django Enhanced Generator on {{ now().strftime('%Y-%m-%d %H:%M:%S') }}.

## Overview

{{ project.description|default("Welcome to the " + project.name + " API documentation.") }}

**Version:** {{ project.version|default("1.0.0") }}
**Base URL:** `{{ project.api_base_url|default("/api/v1") }}`

## Authentication

{% if features.authentication.jwt %}
### JWT Authentication

This API uses JSON Web Token (JWT) authentication. To authenticate:

1. Obtain a token by sending credentials to `/api/auth/token/`
2. Include the token in the Authorization header: `Authorization: Bearer <token>`

**Token endpoints:**
- `POST /api/auth/token/` - Obtain token pair
- `POST /api/auth/token/refresh/` - Refresh access token
- `POST /api/auth/token/verify/` - Verify token validity
{% endif %}

{% if features.authentication.token %}
### Token Authentication

This API uses token-based authentication. Include your API token in the Authorization header:
Authorization: Token <your-api-token>
{% endif %}

{% if features.authentication.session %}
### Session Authentication

Session-based authentication is supported for browser-based clients. Login through `/api/auth/login/`.
{% endif %}

{% if features.authentication.oauth2 %}
### OAuth2 Authentication

OAuth2 authentication is available with the following providers:
{% for provider in features.authentication.oauth2.providers %}
- {{ provider|title }}
{% endfor %}
{% endif %}

## API Endpoints

{% for app in apps %}
{% if app.models %}
### {{ app.name|title }} Endpoints

{{ app.description|default("Endpoints for managing " + app.name + " resources.") }}

{% for model in app.models %}
{% if model.api and model.api.viewset != false %}
#### {{ model.name }} Resource

**Base URL:** `/api/v1/{{ model.name|lower }}s/`

| Method | Endpoint | Description |
|--------|----------|-------------|
| GET | `/{{ model.name|lower }}s/` | List all {{ model.name|lower }}s |
| POST | `/{{ model.name|lower }}s/` | Create a new {{ model.name|lower }} |
| GET | `/{{ model.name|lower }}s/{id}/` | Retrieve a {{ model.name|lower }} |
| PUT | `/{{ model.name|lower }}s/{id}/` | Update a {{ model.name|lower }} |
| PATCH | `/{{ model.name|lower }}s/{id}/` | Partially update a {{ model.name|lower }} |
| DELETE | `/{{ model.name|lower }}s/{id}/` | Delete a {{ model.name|lower }} |

{% if model.api.custom_actions %}
**Custom Actions:**
{% for action in model.api.custom_actions %}
- `{{ action.methods[0] }} /{{ model.name|lower }}s/{% if action.detail %}{id}/{% endif %}{{ action.name }}/` - {{ action.description|default(action.name|title) }}
{% endfor %}
{% endif %}

{% if model.api.filterset_fields %}
**Available Filters:**
{% for field in model.api.filterset_fields %}
- `{{ field }}` - Filter by {{ field }}
{% endfor %}
{% endif %}

{% if model.api.search_fields %}
**Searchable Fields:**
{% for field in model.api.search_fields %}
- `{{ field }}`
{% endfor %}

Example: `GET /{{ model.name|lower }}s/?search=query`
{% endif %}

{% if model.api.ordering_fields %}
**Ordering Fields:**
{% for field in model.api.ordering_fields %}
- `{{ field }}` (use `-{{ field }}` for descending)
{% endfor %}

Example: `GET /{{ model.name|lower }}s/?ordering=-created_at`
{% endif %}
{% endif %}
{% endfor %}
{% endif %}
{% endfor %}

## Request & Response Format

### Request Format

All POST, PUT, and PATCH requests should send JSON data with the `Content-Type: application/json` header.

**Example Request:**
```http
POST /api/v1/resources/ HTTP/1.1
Host: {{ project.api_base_url|default("api.example.com") }}
Content-Type: application/json
Authorization: Bearer <token>

{
    "field1": "value1",
    "field2": "value2"
}
Response Format
All responses are returned in JSON format.
Success Response:
json{
    "id": 1,
    "field1": "value1",
    "field2": "value2",
    "created_at": "2024-01-01T00:00:00Z",
    "updated_at": "2024-01-01T00:00:00Z"
}
Error Response:
json{
    "error": "Error message",
    "detail": "Detailed error information",
    "field_errors": {
        "field_name": ["Error message for this field"]
    }
}
Pagination
{% if features.api.pagination %}
List endpoints support pagination with the following parameters:

page - Page number (default: 1)
page_size - Number of items per page (default: {{ features.api.pagination.page_size|default(20) }})

Paginated Response Format:
json{
    "count": 100,
    "next": "http://api.example.com/resources/?page=2",
    "previous": null,
    "results": [
        {
            "id": 1,
            "field1": "value1"
        }
    ]
}
{% endif %}
Rate Limiting
{% if features.api.throttling %}
API requests are rate-limited to prevent abuse:

Anonymous users: {{ features.api.throttling.anon_rate|default("100/hour") }}
Authenticated users: {{ features.api.throttling.user_rate|default("1000/hour") }}

Rate limit information is included in response headers:

X-RateLimit-Limit - Maximum number of requests
X-RateLimit-Remaining - Number of requests remaining
X-RateLimit-Reset - Time when the rate limit resets
{% endif %}

Status Codes
The API uses standard HTTP status codes:
CodeDescription200OK - Request succeeded201Created - Resource created successfully204No Content - Request succeeded with no response body400Bad Request - Invalid request data401Unauthorized - Authentication required403Forbidden - Access denied404Not Found - Resource not found405Method Not Allowed - HTTP method not supported409Conflict - Request conflicts with current state422Unprocessable Entity - Validation errors429Too Many Requests - Rate limit exceeded500Internal Server Error - Server error
API Versioning
{% if features.api.versioning %}
This API uses {{ features.api.versioning.scheme|default("URL path") }} versioning.
Current version: v1
The version is included in the URL path: /api/v1/
{% if features.api.versioning.scheme == "header" %}
Alternatively, you can specify the version in the Accept header:
Accept: application/json; version=1.0
{% endif %}
{% endif %}
Interactive Documentation
Interactive API documentation is available at:

Swagger UI: [{{ project.api_base_url|default("/api") }}/swagger/]({{ project.api_base_url|default("/api") }}/swagger/)
ReDoc: [{{ project.api_base_url|default("/api") }}/redoc/]({{ project.api_base_url|default("/api") }}/redoc/)

SDKs and Code Examples
{% if project.sdk_urls %}
Available SDKs
{% for language, url in project.sdk_urls.items() %}

[{{ language|title }} SDK]({{ url }})
{% endfor %}
{% endif %}

Example Code
Python
pythonimport requests

# Authentication
response = requests.post(
    "{{ project.api_base_url|default("https://api.example.com") }}/api/auth/token/",
    json={"username": "user", "password": "pass"}
)
token = response.json()["access"]

# Make authenticated request
headers = {"Authorization": f"Bearer {token}"}
response = requests.get(
    "{{ project.api_base_url|default("https://api.example.com") }}/api/v1/resources/",
    headers=headers
)
data = response.json()
JavaScript
javascript// Authentication
const authResponse = await fetch('{{ project.api_base_url|default("https://api.example.com") }}/api/auth/token/', {
    method: 'POST',
    headers: {'Content-Type': 'application/json'},
    body: JSON.stringify({username: 'user', password: 'pass'})
});
const {access} = await authResponse.json();

// Make authenticated request
const response = await fetch('{{ project.api_base_url|default("https://api.example.com") }}/api/v1/resources/', {
    headers: {'Authorization': `Bearer ${access}`}
});
const data = await response.json();
cURL
bash# Authentication
curl -X POST {{ project.api_base_url|default("https://api.example.com") }}/api/auth/token/ \
  -H "Content-Type: application/json" \
  -d '{"username":"user","password":"pass"}'

# Make authenticated request
curl -X GET {{ project.api_base_url|default("https://api.example.com") }}/api/v1/resources/ \
  -H "Authorization: Bearer <token>"
Webhooks
{% if features.api.webhooks %}
The API supports webhooks for real-time event notifications.
Available Events
{% for event in features.api.webhooks.events %}

{{ event.name }} - {{ event.description }}
{% endfor %}

Webhook Payload Format
json{
    "event": "resource.created",
    "timestamp": "2024-01-01T00:00:00Z",
    "data": {
        "id": 1,
        "field1": "value1"
    }
}
Webhook Security
All webhook requests include a signature header X-Webhook-Signature for verification.
{% endif %}
Support
For API support, please contact:

Email: {{ project.support_email|default("api-support@example.com") }}
Documentation: {{ project.docs_url|default("https://docs.example.com") }}
Status Page: {{ project.status_url|default("https://status.example.com") }}

Changelog
{% if project.changelog_url %}
See the [API Changelog]({{ project.changelog_url }}) for version history and updates.
{% else %}
Recent Changes

v1.0.0 - Initial API release
{% endif %}


This comprehensive API documentation template should resolve the error. The template includes:

1. **Overview** - Basic API information
2. **Authentication** - All authentication methods
3. **API Endpoints** - Auto-generated from your models
4. **Request/Response formats** - With examples
5. **Pagination** - If enabled
6. **Rate limiting** - If configured
7. **Status codes** - Standard HTTP codes
8. **API versioning** - If enabled
9. **Interactive documentation** - Links to Swagger/ReDoc
10. **Code examples** - Python, JavaScript, and cURL
11. **Webhooks** - If configured
12. **Support information**

The template dynamically generates documentation based on your schema configuration and will adapt to the features you have enabled.