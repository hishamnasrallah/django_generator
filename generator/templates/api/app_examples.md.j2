# {{ app.name|title }} API Examples

Generated by Django Enhanced Generator on {{ now().strftime('%Y-%m-%d %H:%M:%S') }}

## Overview

This document provides practical examples for working with the {{ app.name|title }} API endpoints.

{%- for model in app.models %}

## {{ model.name }} Examples

### List {{ model.name|title }}s

#### Request
```bash
GET /api/{{ app.name }}/{{ model.name|lower }}s/
Authorization: Bearer YOUR_ACCESS_TOKEN
```

#### Query Parameters
- `page`: Page number (default: 1)
- `page_size`: Number of items per page (default: 20)
{%- if model.api is defined and model.api.filterset_fields is defined %}
{%- for field in model.api.filterset_fields %}
- `{{ field }}`: Filter by {{ field }}
{%- endfor %}
{%- endif %}
{%- if model.api is defined and model.api.search_fields is defined %}
- `search`: Search in fields: {{ model.api.search_fields|join(', ') }}
{%- endif %}
{%- if model.api is defined and model.api.ordering_fields is defined %}
- `ordering`: Order by fields: {{ model.api.ordering_fields|join(', ') }} (prefix with `-` for descending)
{%- endif %}

#### Response
```json
{
    "count": 100,
    "next": "http://api.example.com/api/{{ app.name }}/{{ model.name|lower }}s/?page=2",
    "previous": null,
    "results": [
        {
            "id": 1,
{%- for field in model.fields[:5] %}
            "{{ field.name }}": {%- if field.type == 'CharField' or field.type == 'TextField' %} "example value"
{%- elif field.type == 'IntegerField' %} 123
{%- elif field.type == 'BooleanField' %} true
{%- elif field.type == 'DateTimeField' %} "2024-01-01T00:00:00Z"
{%- elif field.type == 'DecimalField' %} "123.45"
{%- elif field.type == 'JSONField' %} {}
{%- else %} "value"
{%- endif -%},
{%- endfor %}
            "created_at": "2024-01-01T00:00:00Z",
            "updated_at": "2024-01-01T00:00:00Z"
        }
    ]
}
```

### Get Single {{ model.name }}

#### Request
```bash
GET /api/{{ app.name }}/{{ model.name|lower }}s/1/
Authorization: Bearer YOUR_ACCESS_TOKEN
```

#### Response
```json
{
    "id": 1,
{%- for field in model.fields %}
    "{{ field.name }}": {%- if field.type == 'CharField' or field.type == 'TextField' %} "example value"
{%- elif field.type == 'IntegerField' %} 123
{%- elif field.type == 'BooleanField' %} true
{%- elif field.type == 'DateTimeField' %} "2024-01-01T00:00:00Z"
{%- elif field.type == 'DecimalField' %} "123.45"
{%- elif field.type == 'JSONField' %} {}
{%- elif field.type == 'ForeignKey' %} 1
{%- elif field.type == 'ManyToManyField' %} [1, 2, 3]
{%- else %} "value"
{%- endif -%},
{%- endfor %}
    "created_at": "2024-01-01T00:00:00Z",
    "updated_at": "2024-01-01T00:00:00Z"
}
```

### Create {{ model.name }}

#### Request
```bash
POST /api/{{ app.name }}/{{ model.name|lower }}s/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
{%- for field in model.fields %}
{%- if field.name not in ['id', 'created_at', 'updated_at'] and field.required|default(false) %}
    "{{ field.name }}": {%- if field.type == 'CharField' or field.type == 'TextField' %} "new value"
{%- elif field.type == 'IntegerField' %} 456
{%- elif field.type == 'BooleanField' %} false
{%- elif field.type == 'DateTimeField' %} "2024-01-01T12:00:00Z"
{%- elif field.type == 'DecimalField' %} "456.78"
{%- elif field.type == 'JSONField' %} {"key": "value"}
{%- elif field.type == 'ForeignKey' %} 1
{%- elif field.type == 'ManyToManyField' %} [1, 2]
{%- else %} "value"
{%- endif -%}
{%- if not loop.last %},{% endif %}
{%- endif %}
{%- endfor %}
}
```

#### Response
```json
{
    "id": 2,
{%- for field in model.fields %}
    "{{ field.name }}": {%- if field.type == 'CharField' or field.type == 'TextField' %} "new value"
{%- elif field.type == 'IntegerField' %} 456
{%- elif field.type == 'BooleanField' %} false
{%- elif field.type == 'DateTimeField' %} "2024-01-01T12:00:00Z"
{%- elif field.type == 'DecimalField' %} "456.78"
{%- elif field.type == 'JSONField' %} {"key": "value"}
{%- elif field.type == 'ForeignKey' %} 1
{%- elif field.type == 'ManyToManyField' %} [1, 2]
{%- else %} "value"
{%- endif -%},
{%- endfor %}
    "created_at": "2024-01-01T12:00:00Z",
    "updated_at": "2024-01-01T12:00:00Z"
}
```

### Update {{ model.name }}

#### Request (Full Update)
```bash
PUT /api/{{ app.name }}/{{ model.name|lower }}s/1/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
{%- for field in model.fields %}
{%- if field.name not in ['id', 'created_at', 'updated_at'] %}
    "{{ field.name }}": {%- if field.type == 'CharField' or field.type == 'TextField' %} "updated value"
{%- elif field.type == 'IntegerField' %} 789
{%- elif field.type == 'BooleanField' %} true
{%- elif field.type == 'DateTimeField' %} "2024-01-02T00:00:00Z"
{%- elif field.type == 'DecimalField' %} "789.01"
{%- elif field.type == 'JSONField' %} {"updated": true}
{%- elif field.type == 'ForeignKey' %} 2
{%- elif field.type == 'ManyToManyField' %} [3, 4, 5]
{%- else %} "updated"
{%- endif -%}
{%- if not loop.last %},{% endif %}
{%- endif %}
{%- endfor %}
}
```

#### Request (Partial Update)
```bash
PATCH /api/{{ app.name }}/{{ model.name|lower }}s/1/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
{%- if model.fields %}
    "{{ model.fields[0].name }}": {%- if model.fields[0].type == 'CharField' %} "partially updated"
{%- elif model.fields[0].type == 'IntegerField' %} 999
{%- elif model.fields[0].type == 'BooleanField' %} false
{%- else %} "updated"
{%- endif %}
{%- endif %}
}
```

### Delete {{ model.name }}

#### Request
```bash
DELETE /api/{{ app.name }}/{{ model.name|lower }}s/1/
Authorization: Bearer YOUR_ACCESS_TOKEN
```

#### Response
```
HTTP 204 No Content
```

{%- if model.api is defined and model.api.custom_actions is defined %}

### Custom Actions

{%- for action in model.api.custom_actions %}

#### {{ action.description|default(action.name|title) }}

##### Request
```bash
{{ action.method|default('POST')|upper }} /api/{{ app.name }}/{{ model.name|lower }}s/{%- if not action.is_list|default(false) %}1/{%- endif %}{{ action.url_name|default(action.name) }}/
Authorization: Bearer YOUR_ACCESS_TOKEN
{%- if action.method|default('POST')|upper in ['POST', 'PUT', 'PATCH'] %}
Content-Type: application/json

{
    // Request data specific to this action
}
{%- endif %}
```

##### Response
```json
{
    "success": true,
    "message": "Action completed successfully",
    "data": {
        // Response data
    }
}
```
{%- endfor %}
{%- endif %}

{%- if model.api is defined and model.api.allow_bulk|default(false) %}

### Bulk Operations

#### Bulk Create
```bash
POST /api/{{ app.name }}/{{ model.name|lower }}s/bulk_create/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "items": [
        {
{%- for field in model.fields[:3] %}
{%- if field.name not in ['id', 'created_at', 'updated_at'] and field.required|default(false) %}
            "{{ field.name }}": "value1"
{%- if not loop.last %},{% endif %}
{%- endif %}
{%- endfor %}
        },
        {
{%- for field in model.fields[:3] %}
{%- if field.name not in ['id', 'created_at', 'updated_at'] and field.required|default(false) %}
            "{{ field.name }}": "value2"
{%- if not loop.last %},{% endif %}
{%- endif %}
{%- endfor %}
        }
    ]
}
```

#### Bulk Update
```bash
PATCH /api/{{ app.name }}/{{ model.name|lower }}s/bulk_update/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "ids": [1, 2, 3],
    "data": {
        "field_to_update": "new value"
    }
}
```

#### Bulk Delete
```bash
DELETE /api/{{ app.name }}/{{ model.name|lower }}s/bulk_delete/
Authorization: Bearer YOUR_ACCESS_TOKEN
Content-Type: application/json

{
    "ids": [1, 2, 3]
}
```
{%- endif %}

## Common Use Cases

### Filtering Examples

```bash
# Filter by specific field
GET /api/{{ app.name }}/{{ model.name|lower }}s/?status=active

# Multiple filters
GET /api/{{ app.name }}/{{ model.name|lower }}s/?status=active&category=tech

# Date range filtering
GET /api/{{ app.name }}/{{ model.name|lower }}s/?created_at__gte=2024-01-01&created_at__lte=2024-12-31
```

### Searching Examples

```bash
# Simple search
GET /api/{{ app.name }}/{{ model.name|lower }}s/?search=keyword

# Search with filters
GET /api/{{ app.name }}/{{ model.name|lower }}s/?search=keyword&status=active
```

### Ordering Examples

```bash
# Order by single field (ascending)
GET /api/{{ app.name }}/{{ model.name|lower }}s/?ordering=created_at

# Order by single field (descending)
GET /api/{{ app.name }}/{{ model.name|lower }}s/?ordering=-created_at

# Multiple field ordering
GET /api/{{ app.name }}/{{ model.name|lower }}s/?ordering=-created_at,name
```

### Pagination Examples

```bash
# Get specific page
GET /api/{{ app.name }}/{{ model.name|lower }}s/?page=2

# Custom page size
GET /api/{{ app.name }}/{{ model.name|lower }}s/?page_size=50

# Combine with other parameters
GET /api/{{ app.name }}/{{ model.name|lower }}s/?page=2&page_size=50&ordering=-created_at
```

## Error Handling

### Validation Error
```json
{
    "field_name": [
        "This field is required.",
        "Ensure this value is greater than 0."
    ],
    "another_field": [
        "This field must be unique."
    ]
}
```

### Not Found Error
```json
{
    "detail": "Not found."
}
```

### Permission Denied
```json
{
    "detail": "You do not have permission to perform this action."
}
```

### Authentication Error
```json
{
    "detail": "Authentication credentials were not provided."
}
```

{%- endfor %}

## Integration Examples

### Python
```python
import requests

class {{ app.name|title }}Client:
    def __init__(self, base_url, token):
        self.base_url = base_url
        self.headers = {'Authorization': f'Bearer {token}'}

{%- for model in app.models[:1] %}
    def list_{{ model.name|lower }}s(self, **params):
        response = requests.get(
            f"{self.base_url}/api/{{ app.name }}/{{ model.name|lower }}s/",
            headers=self.headers,
            params=params
        )
        return response.json()

    def create_{{ model.name|lower }}(self, data):
        response = requests.post(
            f"{self.base_url}/api/{{ app.name }}/{{ model.name|lower }}s/",
            headers=self.headers,
            json=data
        )
        return response.json()
{%- endfor %}
```

### JavaScript
```javascript
class {{ app.name|title }}Client {
    constructor(baseUrl, token) {
        this.baseUrl = baseUrl;
        this.headers = {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        };
    }

{%- for model in app.models[:1] %}
    async list{{ model.name }}s(params = {}) {
        const queryString = new URLSearchParams(params).toString();
        const response = await fetch(
            `${this.baseUrl}/api/{{ app.name }}/{{ model.name|lower }}s/?${queryString}`,
            { headers: this.headers }
        );
        return response.json();
    }

    async create{{ model.name }}(data) {
        const response = await fetch(
            `${this.baseUrl}/api/{{ app.name }}/{{ model.name|lower }}s/`,
            {
                method: 'POST',
                headers: this.headers,
                body: JSON.stringify(data)
            }
        );
        return response.json();
    }
{%- endfor %}
}
```

## Notes

- All endpoints require authentication unless otherwise specified
- Timestamps are in ISO 8601 format (UTC)
- Decimal values are returned as strings to preserve precision
- Empty fields may be omitted from responses
- Rate limiting applies to all endpoints

For more details, see the main [API documentation](/docs/api/).