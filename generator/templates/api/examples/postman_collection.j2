{
"info": {
"name": "{{ project.name }} API",
"description": "Postman collection for {{ project.name }} API. Generated by Django Enhanced Generator on {{ now().strftime('%Y-%m-%d %H:%M:%S') }}.",
"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
},
"auth": {
"type": "bearer",
"bearer": [
{
"key": "token",
"value": "{{access_token}}",
"type": "string"
}
]
},
"variable": [
{
"key": "base_url",
"value": "http://localhost:8000",
"type": "string"
},
{
"key": "api_url",
"value": "{{base_url}}/api",
"type": "string"
},
{
"key": "access_token",
"value": "",
"type": "string"
},
{
"key": "refresh_token",
"value": "",
"type": "string"
}
],
"item": [
{
"name": "Authentication",
"item": [
{
"name": "Login",
"event": [
{
"listen": "test",
"script": {
"exec": [
"if (pm.response.code === 200) {",
"    const response = pm.response.json();",
"    pm.collectionVariables.set('access_token', response.access);",
"    pm.collectionVariables.set('refresh_token', response.refresh);",
"    pm.test('Login successful', () => {",
"        pm.expect(response).to.have.property('access');",
"        pm.expect(response).to.have.property('refresh');",
"    });",
"}"
],
"type": "text/javascript"
}
}
],
"request": {
"method": "POST",
"header": [
{
"key": "Content-Type",
"value": "application/json"
}
],
"body": {
"mode": "raw",
"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password\"\n}"
},
"url": {
"raw": "{{api_url}}/auth/login/",
"host": ["{{api_url}}"],
"path": ["auth", "login", ""]
}
}
},
{
"name": "Refresh Token",
"event": [
{
"listen": "test",
"script": {
"exec": [
"if (pm.response.code === 200) {",
"    const response = pm.response.json();",
"    pm.collectionVariables.set('access_token', response.access);",
"    pm.test('Token refreshed', () => {",
"        pm.expect(response).to.have.property('access');",
"    });",
"}"
],
"type": "text/javascript"
}
}
],
"request": {
"method": "POST",
"header": [
{
"key": "Content-Type",
"value": "application/json"
}
],
"body": {
"mode": "raw",
"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
},
"url": {
"raw": "{{api_url}}/auth/refresh/",
"host": ["{{api_url}}"],
"path": ["auth", "refresh", ""]
}
}
},
{
"name": "Logout",
"request": {
"method": "POST",
"header": [],
"url": {
"raw": "{{api_url}}/auth/logout/",
"host": ["{{api_url}}"],
"path": ["auth", "logout", ""]
}
}
}
]
},
{% for app in apps %}
    {% if app.models %}
        {
        "name": "{{ app.name|title }}",
        "item": [
        {% for model in app.models %}
            {
            "name": "{{ model.name }}",
            "item": [
            {
            "name": "List {{ model.name|plural }}",
            "event": [
            {
            "listen": "test",
            "script": {
            "exec": [
            "pm.test('Status code is 200', () => {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test('Response has pagination', () => {",
            "    const response = pm.response.json();",
            "    pm.expect(response).to.have.property('count');",
            "    pm.expect(response).to.have.property('results');",
            "});"
            ],
            "type": "text/javascript"
            }
            }
            ],
            "request": {
            "method": "GET",
            "header": [],
            "url": {
            "raw": "{{api_url}}/{{ app.name }}/{{ model.name|lower|plural }}/",
            "host": ["{{api_url}}"],
            "path": ["{{ app.name }}", "{{ model.name|lower|plural }}", ""],
            "query": [
            {
            "key": "page",
            "value": "1",
            "disabled": true
            },
            {
            "key": "page_size",
            "value": "10",
            "disabled": true
            }
            ]
            }
            }
            },
            {
            "name": "Get {{ model.name }}",
            "event": [
            {
            "listen": "test",
            "script": {
            "exec": [
            "pm.test('Status code is 200', () => {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test('Response has id', () => {",
            "    const response = pm.response.json();",
            "    pm.expect(response).to.have.property('id');",
            "});"
            ],
            "type": "text/javascript"
            }
            }
            ],
            "request": {
            "method": "GET",
            "header": [],
            "url": {
            "raw": "{{api_url}}/{{ app.name }}/{{ model.name|lower|plural }}/1/",
            "host": ["{{api_url}}"],
            "path": ["{{ app.name }}", "{{ model.name|lower|plural }}", "1", ""]
            }
            }
            },
            {
            "name": "Create {{ model.name }}",
            "event": [
            {
            "listen": "test",
            "script": {
            "exec": [
            "pm.test('Status code is 201', () => {",
            "    pm.response.to.have.status(201);",
            "});",
            "",
            "if (pm.response.code === 201) {",
            "    const response = pm.response.json();",
            "    pm.environment.set('created_{{ model.name|lower }}_id', response.id);",
            "}"
            ],
            "type": "text/javascript"
            }
            }
            ],
            "request": {
            "method": "POST",
            "header": [
            {
            "key": "Content-Type",
            "value": "application/json"
            }
            ],
            "body": {
            "mode": "raw",
            "raw": "{\n{% for field in model.fields %}{% if field.required and field.name not in ['id', 'created_at', 'updated_at'] %}    \"{{ field.name }}\": {% if field.type == 'CharField' %}\"Example {{ field.name }}\"{% elif field.type == 'IntegerField' %}123{% elif field.type == 'BooleanField' %}true{% elif field.type == 'DateTimeField' %}\"2024-01-01T00:00:00Z\"{% else %}\"value\"{% endif %}{% if not loop.last %},{% endif %}\n{% endif %}{% endfor %}}"
            },
            "url": {
            "raw": "{{api_url}}/{{ app.name }}/{{ model.name|lower|plural }}/",
            "host": ["{{api_url}}"],
            "path": ["{{ app.name }}", "{{ model.name|lower|plural }}", ""]
            }
            }
            },
            {
            "name": "Update {{ model.name }}",
            "event": [
            {
            "listen": "test",
            "script": {
            "exec": [
            "pm.test('Status code is 200', () => {",
            "    pm.response.to.have.status(200);",
            "});"
            ],
            "type": "text/javascript"
            }
            }
            ],
            "request": {
            "method": "PUT",
            "header": [
            {
            "key": "Content-Type",
            "value": "application/json"
            }
            ],
            "body": {
            "mode": "raw",
            "raw": "{\n{% for field in model.fields %}{% if field.name not in ['id', 'created_at', 'updated_at'] %}    \"{{ field.name }}\": {% if field.type == 'CharField' %}\"Updated {{ field.name }}\"{% elif field.type == 'IntegerField' %}456{% elif field.type == 'BooleanField' %}false{% else %}\"updated_value\"{% endif %}{% if not loop.last %},{% endif %}\n{% endif %}{% endfor %}}"
            },
            "url": {
            "raw": "{{api_url}}/{{ app.name }}/{{ model.name|lower|plural }}/{{created_{{ model.name|lower }}_id}}/",
            "host": ["{{api_url}}"],
            "path": ["{{ app.name }}", "{{ model.name|lower|plural }}", "{{created_{{ model.name|lower }}_id}}", ""]
            }
            }
            },
            {
            "name": "Partial Update {{ model.name }}",
            "request": {
            "method": "PATCH",
            "header": [
            {
            "key": "Content-Type",
            "value": "application/json"
            }
            ],
            "body": {
            "mode": "raw",
            "raw": "{\n    \"{{ model.fields[0].name }}\": \"Partially updated\"\n}"
            },
            "url": {
            "raw": "{{api_url}}/{{ app.name }}/{{ model.name|lower|plural }}/{{created_{{ model.name|lower }}_id}}/",
            "host": ["{{api_url}}"],
            "path": ["{{ app.name }}", "{{ model.name|lower|plural }}", "{{created_{{ model.name|lower }}_id}}", ""]
            }
            }
            },
            {
            "name": "Delete {{ model.name }}",
            "event": [
            {
            "listen": "test",
            "script": {
            "exec": [
            "pm.test('Status code is 204', () => {",
            "    pm.response.to.have.status(204);",
            "});"
            ],
            "type": "text/javascript"
            }
            }
            ],
            "request": {
            "method": "DELETE",
            "header": [],
            "url": {
            "raw": "{{api_url}}/{{ app.name }}/{{ model.name|lower|plural }}/{{created_{{ model.name|lower }}_id}}/",
            "host": ["{{api_url}}"],
            "path": ["{{ app.name }}", "{{ model.name|lower|plural }}", "{{created_{{ model.name|lower }}_id}}", ""]
            }
            }
            }
            {% if model.api and model.api.custom_actions %}
                {% for action in model.api.custom_actions %}
                    ,{
                    "name": "{{ action.description or action.name|title }}",
                    "request": {
                    "method": "{{ action.method|upper }}",
                    "header": [
                    {
                    "key": "Content-Type",
                    "value": "application/json"
                    }
                    ],
                    {% if action.method|upper in ['POST', 'PUT', 'PATCH'] %}
                        "body": {
                        "mode": "raw",
                        "raw": "{}"
                        },
                    {% endif %}
                    "url": {
                    "raw": "{{api_url}}/{{ app.name }}/{{ model.name|lower|plural }}/{% if not action.is_list %}1/{% endif %}{{ action.url_name }}/",
                    "host": ["{{api_url}}"],
                    "path": ["{{ app.name }}", "{{ model.name|lower|plural }}"{% if not action.is_list %}, "1"{% endif %}, "{{ action.url_name }}", ""]
                    }
                    }
                    }
                {% endfor %}
            {% endif %}
            ]
            }{% if not loop.last %},{% endif %}
        {% endfor %}
        ]
        }{% if not loop.last %},{% endif %}
    {% endif %}
{% endfor %}
]
}