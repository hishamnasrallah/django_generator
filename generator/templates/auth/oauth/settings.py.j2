"""
OAuth Settings for {{ project.name }}

Generated by Django Enhanced Generator on {{ now().strftime('%Y-%m-%d %H:%M:%S') }}.
"""
import os

# Django-allauth configuration
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Allauth settings
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = '{{ oauth_settings.email_verification|default("mandatory") }}'
ACCOUNT_USERNAME_REQUIRED = {{ 'False' if features.authentication.use_email else 'True' }}
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_LOGOUT_ON_GET = False
ACCOUNT_LOGOUT_REDIRECT_URL = '/'

# Social account settings
SOCIALACCOUNT_PROVIDERS = {
    {% for provider in providers %}
    '{{ provider }}': {
        {% if provider == 'google' %}
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'APP': {
            'client_id': os.environ.get('GOOGLE_CLIENT_ID'),
            'secret': os.environ.get('GOOGLE_CLIENT_SECRET'),
            'key': ''
        }
        {% elif provider == 'github' %}
        'SCOPE': [
            'user',
            'repo',
            'read:org',
        ],
        'APP': {
            'client_id': os.environ.get('GITHUB_CLIENT_ID'),
            'secret': os.environ.get('GITHUB_CLIENT_SECRET'),
            'key': ''
        }
        {% elif provider == 'facebook' %}
        'METHOD': 'oauth2',
        'SDK_URL': '//connect.facebook.net/en_US/sdk.js',
        'SCOPE': ['email', 'public_profile'],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'INIT_PARAMS': {'cookie': True},
        'FIELDS': [
            'id',
            'first_name',
            'last_name',
            'middle_name',
            'name',
            'name_format',
            'picture',
            'short_name'
        ],
        'EXCHANGE_TOKEN': True,
        'LOCALE_FUNC': lambda request: 'en_US',
        'VERIFIED_EMAIL': False,
        'VERSION': 'v13.0',
        'APP': {
            'client_id': os.environ.get('FACEBOOK_CLIENT_ID'),
            'secret': os.environ.get('FACEBOOK_CLIENT_SECRET'),
            'key': ''
        }
        {% elif provider == 'twitter' %}
        'APP': {
            'client_id': os.environ.get('TWITTER_CLIENT_ID'),
            'secret': os.environ.get('TWITTER_CLIENT_SECRET'),
            'key': '',
            'client_key': os.environ.get('TWITTER_API_KEY'),
            'client_secret': os.environ.get('TWITTER_API_SECRET'),
        }
        {% elif provider == 'linkedin' %}
        'SCOPE': [
            'r_basicprofile',
            'r_emailaddress'
        ],
        'PROFILE_FIELDS': [
            'id',
            'first-name',
            'last-name',
            'email-address',
            'picture-url',
            'public-profile-url',
        ],
        'APP': {
            'client_id': os.environ.get('LINKEDIN_CLIENT_ID'),
            'secret': os.environ.get('LINKEDIN_CLIENT_SECRET'),
            'key': ''
        }
        {% endif %}
    },
    {% endfor %}
}

# OAuth adapter settings
SOCIALACCOUNT_ADAPTER = 'authentication.adapters.base.CustomSocialAccountAdapter'
SOCIALACCOUNT_AUTO_SIGNUP = {{ oauth_settings.auto_signup|default(True) }}
SOCIALACCOUNT_FORMS = {
    'signup': 'authentication.forms.CustomSocialSignupForm'
}

# OAuth2 callback settings
SOCIALACCOUNT_QUERY_EMAIL = True
SOCIALACCOUNT_EMAIL_REQUIRED = True
SOCIALACCOUNT_STORE_TOKENS = {{ oauth_settings.store_tokens|default(True) }}