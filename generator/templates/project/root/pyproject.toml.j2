[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ project_name }}"
version = "{{ project.version | default('1.0.0') }}"
description = "{{ project.description | default('Django application built with Enhanced Generator') }}"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "{{ project.author | default('Your Name') }}", email = "{{ project.email | default('your.email@example.com') }}"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: {{ django_version }}",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: {{ python_version }}",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">={{ python_version }}"
dependencies = [
    "Django>={{ django_version }},<5.0",
]

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "flake8",
    "pylint",
    "mypy",
    "pre-commit",
    "django-debug-toolbar",
    "django-extensions",
]
test = [
    "pytest",
    "pytest-django",
    "pytest-cov",
    "factory-boy",
    "faker",
    "coverage",
]

[project.urls]
Homepage = "https://github.com/{{ project.github_username | default('username') }}/{{ project_name }}"
Repository = "https://github.com/{{ project.github_username | default('username') }}/{{ project_name }}"
Documentation = "https://{{ project_name }}.readthedocs.io/"
Changelog = "https://github.com/{{ project.github_username | default('username') }}/{{ project_name }}/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["{{ project_name }}*", "apps*"]
exclude = ["tests*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py{{ python_version.replace('.', '') }}']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = "{{ project_name }},apps"
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip = ["migrations"]

# Pylint configuration
[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "import-error",
]

[tool.pylint.format]
max-line-length = 88

# MyPy configuration
[tool.mypy]
python_version = "{{ python_version }}"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "{{ project_name }}.settings.development"

# Pytest configuration
[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{ project_name }}.settings.testing"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--reuse-db",
    "--nomigrations",
    "--cov={{ project_name }}",
    "--cov=apps",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
testpaths = ["tests", "apps"]

# Coverage configuration
[tool.coverage.run]
source = ["{{ project_name }}", "apps"]
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "*/settings/*",
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "*/migrations/*"]
skips = ["B101", "B601"]

# Flake8 configuration (in setup.cfg since flake8 doesn't support pyproject.toml yet)