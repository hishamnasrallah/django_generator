#!/bin/bash
set -e

echo "Starting {{ project_title }}..."

# Wait for database to be ready
if [ "$DATABASE_URL" ]; then
    echo "Waiting for database..."
    python << END
import sys
import time
import psycopg2
from urllib.parse import urlparse

url = urlparse("$DATABASE_URL")
retry_count = 0
max_retries = 30

while retry_count < max_retries:
    try:
        conn = psycopg2.connect(
            dbname=url.path[1:],
            user=url.username,
            password=url.password,
            host=url.hostname,
            port=url.port,
        )
        conn.close()
        print("Database is ready!")
        break
    except psycopg2.OperationalError:
        retry_count += 1
        print(f"Database not ready. Retry {retry_count}/{max_retries}")
        time.sleep(1)
else:
    print("Could not connect to database!")
    sys.exit(1)
END
fi

# Run migrations
echo "Running database migrations..."
python manage.py migrate --noinput

# Collect static files
echo "Collecting static files..."
python manage.py collectstatic --noinput

# Create superuser if it doesn't exist
if [ "$DJANGO_SUPERUSER_USERNAME" ]; then
    python manage.py shell << END
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(username="$DJANGO_SUPERUSER_USERNAME").exists():
    User.objects.create_superuser(
        username="$DJANGO_SUPERUSER_USERNAME",
        email="$DJANGO_SUPERUSER_EMAIL",
        password="$DJANGO_SUPERUSER_PASSWORD"
    )
    print("Superuser created.")
else:
    print("Superuser already exists.")
END
fi

# Start server
echo "Starting server..."
exec "$@"