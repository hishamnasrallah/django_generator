"""
Main GraphQL schema for {{ project.name }} project.

Generated by Django Enhanced Generator on {{ now().strftime('%Y-%m-%d %H:%M:%S') }}.
"""
import graphene
from graphene_django.debug import DjangoDebug
{% if features.authentication.jwt %}
import graphql_jwt
{% endif %}

{% for app in apps %}
{% if app.models %}
from apps.{{ app.name }}.graphql.schema import schema as {{ app.name }}_schema
{% endif %}
{% endfor %}


class Query(
    {% for app in apps %}
    {% if app.models %}
    {{ app.name }}_schema.Query,
    {% endif %}
    {% endfor %}
    graphene.ObjectType
):
    """Root query combining all app queries."""

    {% if project.debug %}
    debug = graphene.Field(DjangoDebug, name='_debug')
    {% endif %}

    node = graphene.relay.Node.Field()


class Mutation(
    {% for app in apps %}
    {% if app.models %}
    {{ app.name }}_schema.Mutation,
    {% endif %}
    {% endfor %}
    graphene.ObjectType,
):
    """Root mutation combining all app mutations."""

    {% if features.authentication.jwt %}
    # JWT Authentication mutations
    token_auth = graphql_jwt.ObtainJSONWebToken.Field()
    verify_token = graphql_jwt.Verify.Field()
    refresh_token = graphql_jwt.Refresh.Field()
    revoke_token = graphql_jwt.Revoke.Field()
{% endif %}


{% if any(app.graphql.subscriptions for app in apps if app.get('graphql', {})) %}
class Subscription(
    {% for app in apps %}
    {% if app.get('graphql', {}).get('subscriptions', False) %}
    {{ app.name }}_schema.Subscription,
    {% endif %}
    {% endfor %}
    graphene.ObjectType,
):
    """Root subscription combining all app subscriptions."""
    pass
{% endif %}


# Main schema
schema = graphene.Schema(
    query=Query,
    mutation=Mutation,
    {% if any(app.graphql.subscriptions for app in apps if app.get('graphql', {})) %}
    subscription=Subscription,
    {% endif %}
)